name: Test Nodejs Client with server

on:
  workflow_dispatch:
    inputs:
      client_tag:
        description: Client of the tag to test, starts with v
        required: true
        default: v4.0.0
      build_jar:
        description: Whether to build jars (yes/no)
        required: true
        default: no
      server_branch:
        description: Server branch to build from (provide if build_jar is yes)
        required: false
        default: master
      server_version:
        description: Server version to download (provide if build_jar is no)
        required: false
        default: 4.1.4
      server_kind:
        description: Server kind, os or enterprise
        required: true
        default: os
      test_glob:
        description: Mocha test blob for files to be tested
        required: true
        default: test/integration/backward_compatible
jobs:
  upload_jars:
    name: Create and upload JARs
    runs-on: ubuntu-latest
    steps:
      - name: Setup Java
        if:  ${{ github.event.inputs.build_jar == 'yes' }}
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Checkout to Hazelcast
        if:  ${{ github.event.inputs.build_jar == 'yes' }}
        uses: actions/checkout@v2
        with:
          repository: hazelcast/hazelcast
          path: hazelcast
          ref: ${{ github.event.inputs.server_branch }}
      - name: Checkout to Hazelcast Enterprise
        if:  ${{ github.event.inputs.build_jar == 'yes' }}
        uses: actions/checkout@v2
        with:
          repository: hazelcast/hazelcast-enterprise
          path: hazelcast-enterprise
          ref: ${{ github.event.inputs.server_branch }}
          token: ${{ secrets.GH_PAT }}
      - name: Build JARs
        if:  ${{ github.event.inputs.build_jar == 'yes' }}
        run: mvn clean install -DskipTests=True
        working-directory: hazelcast
      - name: Build Enterprise JARs
        if:  ${{ github.event.inputs.build_jar == 'yes' }}
        run: mvn clean install -DskipTests=True
        working-directory: hazelcast-enterprise
      - name: Upload Hazelcast JAR
        if:  ${{ github.event.inputs.build_jar == 'yes' }}
        uses: actions/upload-artifact@v2
        with:
          name: hazelcast
          path: hazelcast/hazelcast-all/target/hazelcast-all-*[!s].jar
          retention-days: 1
      - name: Upload Hazelcast tests JAR
        if:  ${{ github.event.inputs.build_jar == 'yes' }}
        uses: actions/upload-artifact@v2
        with:
          name: hazelcast-tests
          path: hazelcast/hazelcast/target/hazelcast-*-tests.jar
          retention-days: 1
      - name: Upload Hazelcast Enterprise JAR
        if:  ${{ github.event.inputs.build_jar == 'yes' }}
        uses: actions/upload-artifact@v2
        with:
          name: hazelcast-enterprise
          path: hazelcast-enterprise/hazelcast-enterprise-all/target/hazelcast-enterprise-all-*[!s].jar
          retention-days: 1
      - name: Upload Hazelcast Enterprise tests JAR
        if:  ${{ github.event.inputs.build_jar == 'yes' }}
        uses: actions/upload-artifact@v2
        with:
          name: hazelcast-enterprise-tests
          path: hazelcast-enterprise/hazelcast-enterprise/target/hazelcast-enterprise-*-tests.jar
          retention-days: 1
  test:
    needs: [upload_jars]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    name: Test Node.js client ${{ github.event.inputs.client_tag }} with ${{ github.event.inputs.server_version }} ${{ github.event.inputs.server_kind }} server
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Download released JARs
        if:  ${{ github.event.inputs.build_jar == 'no' }}
        run: python download_server_jars.py --version ${{ github.event.inputs.server_version }} --server-kind ${{ github.event.inputs.server_kind }} --dst jars
      - name: Download Hazelcast tests JAR
        if:  ${{ github.event.inputs.build_jar == 'yes' }}
        uses: actions/download-artifact@v2
        with:
          name: hazelcast-tests
          path: jars
      - name: Download built Hazelcast JAR
        if: ${{ github.event.inputs.server_kind == 'os' && github.event.inputs.build_jar == 'yes' }} 
        uses: actions/download-artifact@v2
        with:
          name: hazelcast
          path: jars
      - name: Download built Hazelcast Enterprise JAR
        if: ${{ github.event.inputs.server_kind == 'enterprise' && github.event.inputs.build_jar == 'yes' }} 
        uses: actions/download-artifact@v2
        with:
          name: hazelcast-enterprise
          path: jars
      - name: Download built Hazelcast Enterprise tests JAR
        if: ${{ github.event.inputs.server_kind == 'enterprise' && github.event.inputs.build_jar == 'yes' }} 
        uses: actions/download-artifact@v2
        with:
          name: hazelcast-enterprise-tests
          path: jars
      - name: Checkout to master
        uses: actions/checkout@v2
        with:
          repository: hazelcast/hazelcast-nodejs-client
          path: master
          ref: master
      - name: Checkout to tag
        uses: actions/checkout@v2
        with:
          repository: hazelcast/hazelcast-nodejs-client
          path: tag
          ref: ${{ github.event.inputs.client_tag }}
      - name: Checkout to tests branch
        uses: actions/checkout@v2
        with:
          repository: srknzl/test
          path: tests
          ref: tests
      - name: Change InvocationService
        run: |
          rm -rf $GITHUB_WORKSPACE/master/src/invocation/InvocationService.ts
          cp -a $GITHUB_WORKSPACE/tests/InvocationService $GITHUB_WORKSPACE/master/src/invocation
      - name: Install dependencies and compile client
        run: |
          npm install
          npm run compile
        working-directory: tag
      - name: Install test dependencies
        run: |
          npm install
        working-directory: master
      - name: Copy client code into master
        run: |
          rm -rf $GITHUB_WORKSPACE/master/lib
          rm $GITHUB_WORKSPACE/master/package.json
          cp -a $GITHUB_WORKSPACE/tag/lib $GITHUB_WORKSPACE/master/lib
          cp -a $GITHUB_WORKSPACE/tag/package.json $GITHUB_WORKSPACE/master/package.json
      - name: Copy tests from tests branch
        run: |
          rm -rf $GITHUB_WORKSPACE/master/test/integration
          cp -a $GITHUB_WORKSPACE/tests/integration $GITHUB_WORKSPACE/master/test
      - name: Start RC
        env:
          HAZELCAST_ENTERPRISE_KEY: ${{ secrets.HAZELCAST_ENTERPRISE_KEY }}
        run: python start_rc.py --rc-version '0.8-SNAPSHOT' --jars jars --server-kind ${{ github.event.inputs.server_kind }} --use-simple-server
      - name: Run non-enterprise tests
        if: ${{ github.event.inputs.server_kind == 'os' }}
        run: node node_modules/mocha/bin/mocha --recursive ${{ github.event.inputs.test_glob }}
        working-directory: master
      - name: Run all tests
        if: ${{ github.event.inputs.server_kind == 'enterprise' }}
        run: node node_modules/mocha/bin/mocha --recursive ${{ github.event.inputs.test_glob }}
        working-directory: master
        env:
          HAZELCAST_ENTERPRISE_KEY: ${{ secrets.HAZELCAST_ENTERPRISE_KEY }}
